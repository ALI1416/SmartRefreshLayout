<resources>
    <string name="app_name">智能刷新</string>

    <string name="title_style">样式</string>
    <string name="title_example">使用</string>
    <string name="title_practice">实战</string>

    <string name="region_hint">未选择</string>
    <string name="region_name">已选地区</string>

    <string name="fragment_refresh_styles">风格展示</string>
    <string name="fragment_refresh_example">使用示例</string>
    <string name="fragment_refresh_practice">实战</string>

    <string name="title_activity_index_main">Refresh</string>

    <string name="title_activity_practice_repast">餐饮美食</string>
    <string name="title_activity_practice_profile">个人中心</string>
    <string name="title_activity_practice_web_view">Github</string>
    <string name="title_activity_practice_feed_list">微博列表</string>
    <string name="title_activity_practice_banner">滚动广告</string>
    <string name="title_activity_practice_weibo">微博主页</string>
    <string name="title_activity_practice_qq_browser">QQ浏览器</string>

    <string name="title_activity_style_wave_swipe">全屏水滴</string>
    <string name="title_activity_style_material">官方主题</string>
    <string name="title_activity_style_water_drop">苹果水滴</string>
    <string name="title_activity_style_phoenix">金色校园</string>
    <string name="title_activity_style_taurus">冲上云霄</string>
    <string name="title_activity_style_bezier">贝塞尔雷达</string>
    <string name="title_activity_style_classics">经典风格</string>
    <string name="title_activity_style_circle">弹出圆圈</string>
    <string name="title_activity_style_battle_city">战争城市</string>
    <string name="title_activity_style_hit_block">打砖块</string>
    <string name="title_activity_style_storehouse">StoreHouse</string>
    <string name="title_activity_style_drop_box">掉落盒子</string>
    <string name="title_activity_style_delivery">气球快递</string>
    <string name="title_activity_style_fly_refresh">纸飞机</string>

    <string name="title_activity_example_basic">基本使用</string>
    <string name="title_activity_example_assign_default">全局默认</string>
    <string name="title_activity_example_assign_xml">XML配置</string>
    <string name="title_activity_example_assign_code">java代码设置</string>
    <string name="title_activity_example_over_scroll">越界回弹</string>
    <string name="title_activity_example_listener">多功能监听器</string>
    <string name="title_activity_example_custom">自定义Header</string>
    <string name="title_activity_example_snap_helper">SnapHelper</string>
    <string name="title_activity_example_i18n">国际化</string>

    <string name="fragment_example_no_more_data">没有更多数据</string>
    <string name="fragment_example_horizontal">水平滚动模式</string>
    <string name="fragment_example_pure_scroll">纯滚动模式</string>
    <string name="fragment_example_pure_scroll_header">纯滚动模式-单独指定Header</string>
    <string name="fragment_example_empty_layout">空页面</string>
    <string name="fragment_example_empty_layout_inner">空页面-内部嵌套</string>
    <string name="fragment_example_empty_layout_outer">空页面-外部嵌套</string>
    <string name="fragment_example_nest_scroll">嵌套滚动</string>
    <string name="fragment_example_nested_scroll_integral">嵌套滚动-整体嵌套</string>
    <string name="fragment_example_viewpager">ViewPager</string>
    <string name="fragment_example_three_level">三级刷新</string>
    <string name="fragment_example_bottom_sheet">Bottom Sheet 对话框</string>
    <string name="fragment_example_flex_box_layout">Flexbox Layout 管理器</string>
    <string name="fragment_example_disallow_intercept">禁止拦截</string>
    <string name="fragment_example_staggered_grid">瀑布流</string>

    <string name="fragment_practice_instant">即时通讯</string>

    <string name="index_example_basic">基本的使用</string>
    <string name="index_example_no_more_data">没有更多数据的使用</string>
    <string name="index_example_style">使用指定的Header和Footer</string>
    <string name="index_example_empty">整合空页面</string>
    <string name="index_example_layout">嵌套Layout作为内容</string>
    <string name="index_example_nested">嵌套滚动使用</string>
    <string name="index_example_scroll">纯滚动模式</string>
    <string name="index_example_listener">多功能监听器</string>
    <string name="index_example_custom">自定义Header</string>
    <string name="index_example_i18n">国际化支持</string>
    <string name="index_example_snap_helper">结合 SnapHelper 使用</string>
    <string name="index_example_pager">ViewPager 多页面共用一个 RefreshLayout</string>
    <string name="index_example_bottom_sheet">BottomSheet内部使用加载更多</string>
    <string name="index_example_level">三级刷新</string>
    <string name="index_example_flex_box">结合 FlexboxLayoutManager 使用</string>
    <string name="index_example_horizontal">水平滚动刷新</string>
    <string name="index_example_disallow_intercept">requestDisallowInterceptTouchEvent</string>
    <string name="index_example_staggered_grid">StaggeredGridLayoutManager 的使用</string>

    <string name="index_practice_repast">餐饮美食-简单自定义Header-外边距magin</string>
    <string name="index_practice_profile">个人中心-PureScrollMode-纯滚动模式</string>
    <string name="index_practice_web_view">网页引用-WebView</string>
    <string name="index_practice_feed_list">微博列表-智能识别</string>
    <string name="index_practice_weibo">微博主页-MultiPurposeListener</string>
    <string name="index_practice_banner">滚动广告-Banner</string>
    <string name="index_practice_qq_browser">QQ浏览器-模拟QQ浏览器内核提示</string>
    <string name="index_practice_second_floor">二级刷新-仿淘宝二楼</string>
    <string name="index_practice_instant">即时通讯</string>

    <string name="item_style_theme_orange_abstract">更改为橙色主题颜色</string>
    <string name="item_style_theme_red_abstract">更改为红色主题颜色</string>
    <string name="item_style_theme_green_abstract">更改为绿色主题颜色</string>
    <string name="item_style_theme_blue_abstract">更改为蓝色主题颜色</string>
    <string name="item_style_content_translation_off">下拉的时候列表内容停留在原位不动</string>
    <string name="item_style_content_translation_on">下拉的时候列表内容跟随向下偏移</string>
    <string name="item_style_horizontal_drag_on">打开左右拖动效果</string>
    <string name="item_style_horizontal_drag_off">关闭左右拖动效果</string>
    <string name="item_style_spinner_scale">下拉的时候Header的高度跟随变大</string>
    <string name="item_style_spinner_translation">下拉的时候Header的位置向下偏移</string>
    <string name="item_style_spinner_behind">下拉的时候Header固定在背后</string>
    <string name="item_style_spinner_update_on">开启显示上次更新功能</string>
    <string name="item_style_spinner_update_off">关闭显示上次更新功能</string>
    <string name="item_style_theme_default_abstract">更改为默认主题颜色</string>
    <string name="item_style_load_more">上拉加载更多</string>
    <string name="item_style_bezier_on">下拉的时候绘制贝塞尔曲线背景</string>
    <string name="item_style_bezier_off">下拉的时候不绘制贝塞尔曲线背景</string>
    <string name="item_style_app_bar_expand">展开AppBarLayout，变成可伸展头部的页面</string>
    <string name="item_style_app_bar_collapse">折叠AppBarLayout，变成正常的列表页面</string>
    <string name="item_style_store_house_english">跟换显示符号为英文</string>
    <string name="item_style_store_house_chinese">跟换显示符号为中文</string>
    <string name="item_style_store_house_icon">跟换显示符号为图标</string>
    <string name="item_style_store_house_brand">跟换显示符号为商标</string>

    <string name="item_example_number_title">第%02d条数据</string>
    <string name="item_example_number_abstract">这是测试的第%02d条数据</string>
    <string name="item_example_pager_left">左边</string>
    <string name="item_example_pager_right">右边</string>

    <string name="item_example_i18n_system">跟随系统</string>
    <string name="item_example_i18n_chinese">中文</string>
    <string name="item_example_i18n_english">英语</string>
    <string name="item_example_i18n_click">点击切换语言为 %s</string>

    <string name="github_qq_browser_kernel">网页由 github.com 提供\n已启用QQ浏览器X5内核</string>

    <string name="description_set_default_creator">这是使用定制Header和Footer的第一种方法-全局默认\n\n
        本方法是实际项目中最常用的方法，其特点有：\n\n
        1.设置一次全部生效，不用多次写重复的代码\n
        2.优先级最低，在特别页面可以轻松的覆盖替换\n\n
        使用方法： \n
        //设置全局的Header构建器 \n
        SmartRefreshLayout.setDefaultRefreshHeaderCreator(new DefaultRefreshHeaderCreator() {\n
        public RefreshHeader createRefreshHeader(Context context, RefreshLayout layout) {\n
        return new ClassicsHeader(context);//指定为经典Header，默认是 贝塞尔雷达Header\n
        }\n
        });\n
        //设置全局的Footer构建器\n
        SmartRefreshLayout.setDefaultRefreshFooterCreator(new DefaultRefreshFooterCreator() {\n
        public RefreshFooter createRefreshFooter(Context context, RefreshLayout layout) {\n
        return new ClassicsFooter(context);//指定为经典Footer，默认是 BallPulseFooter\n
        }\n
        });\n\n
        关键代码，需要在布局生成之前设置，建议代码放在 Application.onCreate 中
    </string>
    <string name="description_define_in_xml"><![CDATA[这是使用定制Header和Footer的第二种方法-Xml中配置\n\n
        在需要使用特别的Header或者特别配置的页面时候可以使用本方法\n\n
        本方法的特点：\n
        1.可以在Android Studio中的预览窗口预览效果\n
        2.优先级高于 【全局默认】但是低于 【JavaCode】\n\n
        代码示例：\n
        <com.scwang.smartrefresh.SmartRefreshLayout\n
            \t\tandroid:layout_width="match_parent"\n
            \t\tandroid:layout_height="match_parent">\n
            \t<com.scwang.smartrefresh.header.ClassicsHeader\n
                \t\tandroid:layout_width="match_parent"\n
                \t\tandroid:layout_height="wrap_content"/>\n
            \t<TextView\n
                \t\tandroid:layout_width="match_parent"\n
                \t\tandroid:layout_height="match_parent"/>\n
            \t<com.scwang.smartrefresh.footer.ClassicsFooter\n
                \t\tandroid:layout_width="match_parent"\n
                \t\tandroid:layout_height="wrap_content"/>\n
        </com.scwang.smartrefresh.SmartRefreshLayout>\n
    ]]></string>
    <string name="description_define_in_code">这是使用定制Header和Footer的第三种方法-代码设置\n\n
        本方法是实际项目中比较少用的方法，其特点有：\n\n
        1.设置一次生效一次，需要多处设置，建议特别的页面使用\n
        2.优先级最高，即使使用了会覆盖方法一和方法二的设置\n\n
        使用方法： \n
        final RefreshLayout refreshLayout = findViewById(R.id.refreshLayout);\n
        //设置 Header 为 Material风格\n
        refreshLayout.setRefreshHeader(new MaterialHeader(this));\n
        //设置 Footer 为 三球动画\n
        refreshLayout.setRefreshFooter(new BallPulseFooter(this));\n\n
    </string>

    <string name="instant_message_input_hint">输入消息</string>
    <string name="instant_message_send">发送</string>
    <string name="switch_scroll_content_when_loaded">加载更多时显示新内容</string>

</resources>
